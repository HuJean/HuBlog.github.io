---
layout: post
title: CSS之浮动介绍
date: '2017-05-10 07:00:00'
categories: [CSS]
tags: [float]
---


# 基本理解
* 浮动可以理解为让某个div元素脱离标准流，漂浮在标准流之上，和标准流不是一个层次。
  * 首先，在页面上安置标准流元素；
  * 假如某个div元素A是浮动的，如果A元素上一个元素也是浮动的，那么A元素会跟随在上一个元素的后边(如果一行放不下这两个元素，那么A元素会被挤到下一行)；
  * 如果A元素上一个元素是标准流中的元素，那么A的相对垂直位置不会改变，也就是说A的顶部总是和上一个元素的底部对齐。
  * 元素浮动之前，也就是在标准流中，是竖向排列的，而浮动之后可以理解为横向排列。

---
### 效果
 * 块状元素，会钻进浮动元素的下面，被浮动元素所覆盖

     ![](/assets/images/2017/float_1.jpg)
 * 行内元素，例如文字，则会环绕在浮动元素的周围，为浮动元素留出空间

     ![](/assets/images/2017/float_2.jpg)
 * 浮动元素的父元素坍缩

     ![](/assets/images/2017/float_3.jpg)

---
### 清除浮动的基本方法
 * clear
   * none：默认值，允许两边都可以有浮动对象；
   * left：不允许左边有浮动对象；
   * right：不允许右边有浮动对象；
   * both：不允许有浮动对象。
 * 对于CSS的清除浮动，一定要牢记：
   * 这个规则只能影响使用清除的元素本身，不能影响其他元素。
   * 希望移动那个元素，就要在那个元素中添加清除浮动。

---
### 闭合浮动
 * 使浮动元素闭合，从而减少浮动带来的影响
   * 添加额外标签：在浮动元素末尾添加一个空的标签例如div style="clear:both"；有违结构与表现分离；
   * 使用br标签和其自身的html属性，br有clear属性
   * 父元素设置 overflow：hidden；内容增多时候容易造成不会自动换行导致内容被隐藏掉
   * 父元素也设置浮动，使得与父元素相邻的元素的布局会受到影响，不可能一直浮动到body
   * 使用:after 伪元素
 * 通过对比，我们不难发现，其实以上列举的方法，无非有两类。
   * 其一，通过在浮动元素的末尾添加一个空元素，设置 clear：both属性，after伪元素其实也是通过 content 在元素的后面生成了内容为一个点的块级元素；
   * 其二，通过设置父元素 overflow 或者display：table 属性来闭合浮动。
 


